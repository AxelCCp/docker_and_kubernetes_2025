kubectl helpminikube start --driver=dockerminikube stopminikube statusminikube status---kubectl create deployment mysql8 --image=mysql:8 --port=3306kubectl get deploymentskubectl get podskubectl describe pods mysql8-59db65578b-k7hrdkubectl logs mysql8-59db65578b-k7hrdkubectl get deploykubectl delete deployment mysql8kubectl create deployment mysql8 --image=mysql:8 --port=3306 --dry-run=client -o yaml > deployment-mysql8.yamlkubectl apply -f .\deployment-mysql.yamlkubectl get podskubectl describe pods mysql8-bddf7f8c4-7bzm6kubectl expose deployment mysql8 --port=3306 --type=ClusterIPkubectl get serviceskubectl describe service mysql8---kubectl create deployment ms-usuarios-server --image=4xe1/usuarios:latest --port=8001kubectl create deployment usuarios --image=4xe1/usuarios:latest --port=8001kubectl get deploymentskubectl get podslogs error:kubectl get pods -l app=ms-usuarios-serverkubectl logs ms-usuarios-server-66775776d7-qwxjl---docker build -t i-usuarios . -f .\ms-usuarios-server\Dockerfiledocker run -p 8001:8001 --rm -it i-usuarios /bin/shdocker run -p 8001:8001 -d --rm --name ms-usuarios-server --network spring usuariosdocker run -d -p 3307:3306 --name mysql8 --network spring -e MYSQL_ROOT_PASSWORD=sasa -e MYSQL_DATABASE=db-ms-docker-kube mysql:8docker run -p 5532:5432 --name postgres14 --network spring -e POSTGRES_PASSWORD=sasa -e POSTGRES_DB=db-ms-docker-kube -d postgres:14-alpinedocker run -d -p 8001:8001 --rm --name ms-usuarios-server --network spring i-usuarios:v2docker run -d -p 8002:8002 --rm --name ms-cursos-server --network spring i-cursos:v2---volumenes:docker run -d -p 3307:3306 --name mysql8 --network spring -e MYSQL_ROOT_PASSWORD=sasa -e MYSQL_DATABASE=db-ms-docker-kube -v data-mysql:/var/lib/mysql --restart=always mysql:8docker run -p 5532:5432 --name postgres14 --network spring -e POSTGRES_PASSWORD=sasa -e POSTGRES_DB=db-ms-docker-kube -d -v data-postgres:/var/lib/postgresql/data --restart=always postgres:14-alpine---contenedoresdocker run -d -p 8001:8001 --rm --name ms-usuarios-server --network spring i-usuarios:v2docker run -d -p 8002:8002 --rm --name ms-cursos-server --network spring i-cursos:v2---contenedores - sobreescribir env portdocker run -d -p 8001:8090 --env PORT=8090 --rm --name ms-usuarios-server --network spring i-usuariosdocker run -d -p 8001:8001 --env PORT=8090 --rm --name ms-usuarios-server --network spring i-usuarios#usa archivo .envdocker run -d -p 8001:8001 --env-file .\ms-usuarios-server.env --rm --name ms-usuarios-server --network spring i-usuariosdocker run -d -p 8002:8002 --env-file .\ms-cursos-server.env --rm --name ms-cursos-server --network spring i-cursos---imagenesdocker build -t i-cursos . -f .\ms-cursos-server\Dockerfiledocker build -t i-usuarios . -f .\ms-usuarios-server\Dockerfile--en la construccion de la img se pasa el puerto por argumento al dockerfile, por defecto es 8001docker build -t i-usuarios . -f .\ms-usuarios-server\Dockerfile --build-arg PORT_APP=8080